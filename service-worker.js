"use strict";var precacheConfig=[["/index.html","c30841da3c4c0e2da65f6ec3138e393b"],["/static/css/main.872254bc.css","8093f7158f153b5daf9f8eda3e644855"],["/static/js/main.4889709f.js","7888136676c3507c32b73a05e33f6c4e"],["/static/media/expo.d35afb23.jpg","d35afb23d4d5bd9079d812f3822f0dae"],["/static/media/g1.98a640da.jpg","98a640da7455e0fcbaafa53c350b0b46"],["/static/media/g4.889bafc8.jpg","889bafc850806f8c370286e01dd4d47b"],["/static/media/g5.aacd3b47.jpg","aacd3b47263cbce1797905d6142a222c"],["/static/media/g6.36961fd7.jpg","36961fd7527b4f4bc8fb3cdecdfe60a8"],["/static/media/jeans.5e5527b2.jpg","5e5527b28ea36376618648e11ce57eff"],["/static/media/logo.5d5d9eef.svg","5d5d9eefa31e5e13a6610d9fa7a283bb"],["/static/media/lp.617bbeb7.jpg","617bbeb7f5a197b1a5d452e4f036651c"],["/static/media/lp2.c9df31b7.jpg","c9df31b7e178b4e3a44a8514ec1153b7"],["/static/media/lp4.98ec537a.jpg","98ec537a6855cefe022ffd3a8ac7b470"],["/static/media/lp5.0cdb97a9.jpg","0cdb97a97bed9c36b253b5cb62c8fc13"],["/static/media/lp7.448e3262.jpg","448e3262c3c0e4701da870da45641101"],["/static/media/ma.d35afb23.jpg","d35afb23d4d5bd9079d812f3822f0dae"],["/static/media/map.4fb6517f.jpg","4fb6517f498a7797a39468c2c79599c9"],["/static/media/pdt.91cd361f.jpg","91cd361f80bac5be0b827c807ffbf36d"],["/static/media/shirt.2e4214f6.jpg","2e4214f64d31f679c882a2fb9329a37c"],["/static/media/shoes.29bf7b24.jpg","29bf7b24066f320cdfb5c214321e3c3f"],["/static/media/tail.d35afb23.jpg","d35afb23d4d5bd9079d812f3822f0dae"],["/static/media/watch.39d04487.jpg","39d04487c15eb0762365361322d77b75"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(e){return e.redirected?("body"in e?Promise.resolve(e.body):e.blob()).then(function(t){return new Response(t,{headers:e.headers,status:e.status,statusText:e.statusText})}):Promise.resolve(e)},createCacheKey=function(e,t,a,n){var c=new URL(e);return n&&c.pathname.match(n)||(c.search+=(c.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),c.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,t){var a=new URL(e);return a.hash="",a.search=a.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return t.every(function(t){return!t.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),a.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],n=new URL(t,self.location),c=createCacheKey(n,hashParamName,a,/\.\w{8}\./);return[n.toString(),c]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(a){if(!t.has(a)){var n=new Request(a,{credentials:"same-origin"});return fetch(n).then(function(t){if(!t.ok)throw new Error("Request for "+a+" returned a response with status "+t.status);return cleanResponse(t).then(function(t){return e.put(a,t)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(a){return Promise.all(a.map(function(a){if(!t.has(a.url))return e.delete(a)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var t,a=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching),n="index.html";(t=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,n),t=urlsToCacheKeys.has(a));var c="/index.html";!t&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(a=new URL(c,self.location).toString(),t=urlsToCacheKeys.has(a)),t&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(t){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,t),fetch(e.request)}))}});